# -*- coding: utf-8 -*-
"""Predictions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fR8_HEnGzyKpKhXkMqmiavcC8Sm7QiX-

# Importation des bibliothèques
"""

import keras
from keras.models import load_model
import keras.utils as image
from tensorflow.keras.utils import img_to_array
import matplotlib.pyplot as plt
import numpy as np
from PIL import Image

with open("classes.txt", 'r') as f:
  classes=f.read()
classes=classes.split(",")

def predict(path, model, real=None):
  plt.imshow(np.array(Image.open(path)))
  plt.show()
  img=image.load_img(path, target_size=(224, 224))
  img=img_to_array(img)
  img=np.expand_dims(img, axis=0)
  result=model.predict(img)
  print(result)
  for i, j in zip(result[0], classes):
    if i==1:
      prediction=j
      break
  print("Prediction avec CNN")
  if real:
    print("Classe réelle: ", real)
  print("Classe prédite: ", prediction)
  return prediction


def predict1(path, model, real=None):
  plt.imshow(np.array(Image.open(path)))
  plt.show()
  img=image.load_img(path, target_size=(224, 224))
  img=img_to_array(img)
  img=np.expand_dims(img, axis=0)
  result=model.predict(img)
  prediction=classes[list(result[0]).index(np.max(result[0]))]
  print("Prediction avec CNN")
  if real:
    print("Classe réelle: ", real)
  print("Classe prédite: ", prediction)
  return prediction


path="chiwawa.jpg"


#Prediction avec CNN
model_cnn=load_model("cnn.h5")
predict1(path=path, model=model_cnn, real="chihuahua")


#Prediction avec VGG16
model_vgg=load_model("vgg.h5")
predict(path=path, model=model_vgg, real="chihuahua")

